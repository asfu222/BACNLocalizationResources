name: Update Yostar Server URL

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
permissions:
  contents: write
jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Clone BlueArchiveLocalizationTools repository
        run: |
          git clone --depth 1 https://github.com/asfu222/BlueArchiveLocalizationTools.git

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install requirements from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r BlueArchiveLocalizationTools/requirements.txt

      - name: Run update_urls.py with ba.env
        run: |
          python BlueArchiveLocalizationTools/update_urls.py ba.env server-info.json
      - name: Check if ba.env was modified
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ba.env
          if git diff --cached --quiet; then
            echo "没有检测到更新，跳过提交"
            echo "update_detected=false" >> $GITHUB_ENV
          else
            echo "检测到悠星服务器URL更新，正在更新ba.env网址..."
            echo "update_detected=true" >> $GITHUB_ENV
          fi
      - name: Push updated server info JSON
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.REDIRECT_SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H prod-clientpatch.bluearchive.me >> ~/.ssh/known_hosts
          sed -i 's|https://prod-clientpatch.bluearchiveyostar.com/|https://prod-clientpatch.bluearchive.me/|g' server-info.json
          scp server-info.json ubuntu@prod-clientpatch.bluearchive.me:/home/ubuntu/nginx_redirect_server/server_cfg/server-info.json
      
      - name: Commit and push changes if ba.env was modified
        if: env.update_detected == 'true'
        run: |
          git commit -m "更新悠星服务器URL"
          git push origin HEAD
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "run-deployment"}'
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.COMMON_PNG_SRC }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/asfu222/commonpngsrc/dispatches \
            -d '{"event_type": "update-assets"}'

      - name: Check last deploy status
        if: env.update_detected == 'false'
        id: check-deploy-status
        run: |
          latest_run_url=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/Deploy.yml/runs" | \
            jq -r '.workflow_runs[0].conclusion')
          
          echo "Latest deploy conclusion: $latest_run_url"
          
          if [ "$latest_run_url" == "failure" ]; then
            echo "Previous Deploy workflow failed, triggering a retry..."
            echo "deploy_retry_needed=true" >> $GITHUB_ENV
          else
            echo "Deploy workflow succeeded or was canceled."
            echo "deploy_retry_needed=false" >> $GITHUB_ENV
          fi
          
      - name: Trigger Deploy.yml workflow if previous run failed
        if: env.deploy_retry_needed == 'true'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "run-deployment"}'
